package com.example.myappnew;import androidx.appcompat.app.AppCompatActivity;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.View;import com.example.myappnew.retrofit2.GetUser;import com.example.myappnew.retrofit2.PostCreate;import com.example.myappnew.retrofit2.PostLoginSuc;import com.example.myappnew.retrofit2.PostRegSuc;import com.example.myappnew.retrofit2.PutUpdate;import com.example.myappnew.retrofit2.RegSuc;import com.google.gson.Gson;import java.util.List;import okhttp3.OkHttpClient;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;public class MainActivity extends AppCompatActivity  {    private static final String LOG_TAG = "MainActivity.retrofit";    /* для Retrofit - 1 часть*/    private static final String BASE_URL = "https://date.nager.at";    /* для Retrofit - 2 часть*/    private static final String BASE_URL2 = "https://reqres.in";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        initRetrofit();        initRetrofit_2();    }    /*===============*/    /*** initRetrofit - 1 ***/    private void initRetrofit() {        OkHttpClient client = new OkHttpClient.Builder()                .build();        Retrofit retrofit = (new Retrofit.Builder())                .client(client)                .baseUrl(BASE_URL)                .addConverterFactory(GsonConverterFactory.create(new Gson()))                .build();        RetrofitService service = retrofit.create(RetrofitService.class);        Thread thread = new Thread(() -> {            service.load("2021", "RU")                    .enqueue(new Callback<List<UsersYear>>() {                        @Override                        public void onResponse(Call<List<UsersYear>> call, Response<List<UsersYear>> response) {                            log(response.body().toString());                        }                        @Override                        public void onFailure(Call<List<UsersYear>> call, Throwable t) {                            log(t.getMessage());                        }                    });        });        thread.start();        try {            thread.join();        } catch (InterruptedException e) {            e.printStackTrace();        }    }    private void log(String mess) {        Log.d(LOG_TAG, mess);    }    //Неделя    public void sendWeek(View view) {        Intent intent = new Intent(this, Activity_week.class);        startActivity(intent);    }    //Календарь    public void sendCalendar(View view) {        Intent intent = new Intent(this, Activity_calendar.class);        startActivity(intent);    }    //Трекер    public void sendTrek(View view) {        Intent intent = new Intent(this, Activity_trek.class);        startActivity(intent);    }    //тест    public void sendAdd(View view) {        Intent intent = new Intent(this, Activity_add.class);        startActivity(intent);    }    /******************************************     * Ретрофит2 - для теста     * https://reqres.in/     */    private void initRetrofit_2() {        OkHttpClient client = new OkHttpClient.Builder()                .build();        Retrofit retrofit_req = (new Retrofit.Builder())                /* Базовая часть адреса */                .baseUrl(BASE_URL2)                /* Конвертер, необходимый для преобразования в объекты */                .addConverterFactory(GsonConverterFactory.create(new Gson()))                .client(client)                .build();        /*****************         ****RetrofitService2 ***         *  https://reqres.in/api/users?page=2 (Response-200)         * */        RetrofitService2 service1 = retrofit_req.create(RetrofitService2.class);        Thread thread1 = new Thread(() -> {        service1.getUser(2).enqueue(new Callback<GetUser>() {            @Override            public void onResponse(Call<GetUser> call, Response<GetUser> response) {                response.body();                if (response.code() == 200) {                    Log.d(getClass().toString(),"******* GET https://reqres.in/api/users?page=2 (Response-200) *******");                }            }            @Override            public void onFailure(Call<GetUser> call, Throwable t) {                Log.d(getClass().toString(), t.getMessage());                Log.d(getClass().toString(),"GET https://reqres.in/api/users?page=2 - ERROR!");            }        });            /*********************             *** https://reqres.in/api/users?delay=3  (Response-200)             * */            service1.getDelRes(3).enqueue(new Callback<GetUser>() {                @Override                public void onResponse(Call<GetUser> call, Response<GetUser> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* GET https://reqres.in/api/users?delay=3  (Response-200) *******");                    }                }                @Override                public void onFailure(Call<GetUser> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"GET https://reqres.in/api/users?delay=3 - ERROR!");                }            });            /*******************             *** https://reqres.in/api/users/2 (Response-200)              */            service1.getSinUser(2).enqueue(new Callback<GetUser>() {                @Override                public void onResponse(Call<GetUser> call, Response<GetUser> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* GET https://reqres.in/api/users/2 (Response-200) *******");                    }                }                @Override                public void onFailure(Call<GetUser> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"GET https://reqres.in/api/users/2 - ERROR!");                }            });            /*******************             * * https://reqres.in/api/users/23 (Response-404)             **/            service1.getSinUser(23).enqueue(new Callback<GetUser>() {                @Override                public void onResponse(Call<GetUser> call, Response<GetUser> response) {                    response.body();                    if (response.code() == 404) {                        Log.d(getClass().toString(),"******* GET https://reqres.in/api/users/23 (Response-404) *******");                    }                }                @Override                public void onFailure(Call<GetUser> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"GET https://reqres.in/api/users/23 - ERROR!");                }            });            /****************             * POST https://reqres.in/api/users  (Response-201)             * {             *    "name": "morpheus",             *    "job": "leader"             * }             * */            service1.postCreate(new PostCreate("morpheus", "leader")).enqueue(new Callback<PostCreate>() {                @Override                public void onResponse(Call<PostCreate> call, Response<PostCreate> response) {                    response.body();                    if (response.code() == 201) {                        Log.d(getClass().toString(),"******* POST https://reqres.in/api/users  (Response-201) *******");                    }                }                @Override                public void onFailure(Call<PostCreate> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"POST https://reqres.in/api/users - ERROR!");                }            });            /**             * PUT https://reqres.in/api/users/2  (Response-200)             * UPDATE             * {             *    "name": "morpheus",             *    "job": "zion resident"             * }             * */            service1.putUpdate(2, new PostCreate("morpheus", "zion resident")).enqueue(new Callback<PutUpdate>() {                @Override                public void onResponse(Call<PutUpdate> call, Response<PutUpdate> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* PUT https://reqres.in/api/users/2  (Response-200) *******");                    }                }                @Override                public void onFailure(Call<PutUpdate> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"PUT https://reqres.in/api/users/2 - ERROR!");                }            });            /**             * PATCH https://reqres.in/api/users/2 (Response-200)             * UPDATE             * {             *     "name": "morpheus",             *     "job": "zion resident"             * }             */            service1.patchUpdate(2, new PostCreate("morpheus", "zion resident")).enqueue(new Callback<PutUpdate>() {                @Override                public void onResponse(Call<PutUpdate> call, Response<PutUpdate> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* PATCH https://reqres.in/api/users/2 (Response-200) *******");                    }                }                @Override                public void onFailure(Call<PutUpdate> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"PATCH https://reqres.in/api/users/2 - ERROR!");                }            });            /**             * DELETE https://reqres.in/api/users/2 (Response-204)             */            service1.deleteDel(2).enqueue(new Callback<PostCreate>() {                @Override                public void onResponse(Call<PostCreate> call, Response<PostCreate> response) {                    response.body();                    if (response.code() == 204) {                        Log.d(getClass().toString(),"******* DELETE https://reqres.in/api/users/2 (Response-204) *******");                    }                }                @Override                public void onFailure(Call<PostCreate> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"DELETE https://reqres.in/api/users/2 - ERROR!");                }            });            /**             * get https://reqres.in/api/unknown (Response-200)             * LIST <RESOURCE>             * */            service1.getListRes().enqueue(new Callback<GetUser>() {                @Override                public void onResponse(Call<GetUser> call, Response<GetUser> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* GET https://reqres.in/api/unknown (Response-200) *******");                    }                }                @Override                public void onFailure(Call<GetUser> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"GET https://reqres.in/api/unknown - ERROR!");                }            });            /**             * get https://reqres.in/api/unknown/2  (Response-200)             * SINGLE <RESOURCE>             * */            service1.getSingleRes(2).enqueue(new Callback<GetUser>() {                @Override                public void onResponse(Call<GetUser> call, Response<GetUser> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* GET https://reqres.in/api/unknown/2  (Response-200) *******");                    }                }                @Override                public void onFailure(Call<GetUser> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"GET https://reqres.in/api/unknown/2  - ERROR!");                }            });            /*** get https://reqres.in/api/unknown/23 (Response-404)             * SINGLE <RESOURCE> NOT FOUND - Response 404             * */            service1.getSingleRes(23).enqueue(new Callback<GetUser>() {                @Override                public void onResponse(Call<GetUser> call, Response<GetUser> response) {                    response.body();                    if (response.code() == 404) {                        Log.d(getClass().toString(),"******* GET https://reqres.in/api/unknown/23 (Response-404) *******");                    }                }                @Override                public void onFailure(Call<GetUser> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"GET https://reqres.in/api/unknown/23 - ERROR!");                }            });            /**             * POST https://reqres.in/api/register (Response-200)             * REGISTER - SUCCESSFUL             * Response 200             * {             *   "email": "eve.holt@reqres.in",             *   "password": "pistol"             * }             *             * Response 200             * {             *   "id": 4,             *   "token": "QpwL5tke4Pnpja7X4"             * }             * */            service1.postRegSuc(new RegSuc("eve.holt@reqres.in", "pistol")).enqueue(new Callback<PostRegSuc>() {                @Override                public void onResponse(Call<PostRegSuc> call, Response<PostRegSuc> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* POST https://reqres.in/api/register (Response-200) *******");                    }                }                @Override                public void onFailure(Call<PostRegSuc> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"POST https://reqres.in/api/register - ERROR!");                }            });            /***             * POST https://reqres.in/api/register (Response-400)             * REGISTER - UNSUCCESSFUL             * {             *     "email": "sydney@fife"             * }             * */            service1.postRegSuc(new RegSuc("sydney@fife", null)).enqueue(new Callback<PostRegSuc>() {                @Override                public void onResponse(Call<PostRegSuc> call, Response<PostRegSuc> response) {                    response.body();                    if (response.code() == 400) {                        Log.d(getClass().toString(),"******* POST https://reqres.in/api/register (Response-400) *******");                    }                }                @Override                public void onFailure(Call<PostRegSuc> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"POST https://reqres.in/api/register - ERROR!");                }            });            /**             * POST https://reqres.in/api/login (Response-200)             * LOGIN - SUCCESSFUL - Response 200             * {             *   "email": "eve.holt@reqres.in",             *   "password": "cityslicka"             *  }             * */            service1.postLoginSuc(new RegSuc("eve.holt@reqres.in", "cityslicka")).enqueue(new Callback<PostLoginSuc>() {                @Override                public void onResponse(Call<PostLoginSuc> call, Response<PostLoginSuc> response) {                    response.body();                    if (response.code() == 200) {                        Log.d(getClass().toString(),"******* POST https://reqres.in/api/login (Response-200) *******");                    }                }                @Override                public void onFailure(Call<PostLoginSuc> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"POST https://reqres.in/api/login - ERROR!");                }            });            /**             * POST  https://reqres.in/api/login (Response-400)             * LOGIN - UNSUCCESSFUL - Response 400             * {             *     "email": "peter@klaven"             * }             * */            service1.postLoginSuc(new RegSuc("peter@klaven", null)).enqueue(new Callback<PostLoginSuc>() {                @Override                public void onResponse(Call<PostLoginSuc> call, Response<PostLoginSuc> response) {                    response.body();                    if (response.code() == 400) {                        Log.d(getClass().toString(),"******* POST  https://reqres.in/api/login (Response-400) *******");                    }                }                @Override                public void onFailure(Call<PostLoginSuc> call, Throwable t) {                    Log.d(getClass().toString(), t.getMessage());                    Log.d(getClass().toString(),"POST  https://reqres.in/api/login - ERROR!");                }            });        });        thread1.start();        try {            thread1.join();        } catch (InterruptedException e) {            e.printStackTrace();        }    }}